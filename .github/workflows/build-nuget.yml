name: Build and Publish NuGet Package

on:
  workflow_run:
    workflows: ['Build Native Linux', 'Build Native Windows', 'Build Native macOS']
    types:
      - completed
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set RocksDB version
      run: |
        ROCKSDBVNUM=$(cat rocksdbversion)
        echo "ROCKSDBVERSION=${ROCKSDBVNUM}.${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV
        echo "ROCKSDBVERSIONBASE=${ROCKSDBVNUM}" >> $GITHUB_ENV
      working-directory: ${{ github.workspace }}
      
    - name: Setup .NET 8.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x'
        
    - name: Download and extract RocksDB native libraries
      run: |
        mkdir /tmp/rocksdbjar
        cd /tmp/rocksdbjar
        wget https://repo1.maven.org/maven2/org/rocksdb/rocksdbjni/${{ env.ROCKSDBVERSIONBASE }}/rocksdbjni-${{ env.ROCKSDBVERSIONBASE }}.jar
        unzip rocksdbjni-${{ env.ROCKSDBVERSIONBASE }}.jar
        ls -hR
        mv librocksdbjni-osx-arm64.jnilib ${{ github.workspace }}/csharp/runtimes/osx-arm64/native/librocksdb.dylib
        mv librocksdbjni-linux-aarch64.so ${{ github.workspace }}/csharp/runtimes/linux-arm64/native/librocksdb.so
        mv librocksdbjni-linux-aarch64.so ${{ github.workspace }}/csharp/runtimes/linux-arm64/native/librocksdb-musl.so
        mv librocksdbjni-osx-x86_64.jnilib ${{ github.workspace }}/csharp/runtimes/osx-x64/native/librocksdb.dylib
        mv librocksdbjni-linux64.so ${{ github.workspace }}/csharp/runtimes/linux-x64/native/librocksdb.so
        mv librocksdbjni-linux64-musl.so ${{ github.workspace }}/csharp/runtimes/linux-x64/native/librocksdb-musl.so
        ls ${{ github.workspace }} -hR
        cd -

    - name: Download Linux Artifacts
      uses: actions/download-artifact@v4
      with:
        name: linux-native-libs
        path: ${{ github.workspace }}/csharp/runtimes/linux-x64/native/

    - name: Download Windows Artifacts
      uses: actions/download-artifact@v4
      with:
        name: windows-native-libs
        path: ${{ github.workspace }}/csharp/runtimes/win-x64/native/

    - name: Download macOS Artifacts
      uses: actions/download-artifact@v4
      with:
        name: macos-native-libs
        path: ${{ github.workspace }}/csharp/runtimes/osx-x64/native/

    - name: Run Code Generator
      run: dotnet run --project ${{ github.workspace }}/build-codegen/CSharpGen.csproj
      working-directory: ${{ github.workspace }}/build-codegen/

    - name: Build Project
      run: dotnet build ${{ github.workspace }}/csharp/RocksDbSharp.csproj -c Release /p:Version=${{ env.ROCKSDBVERSION }} /p:AllowUnsafeBlocks=True /p:LangVersion=latest
      working-directory: ${{ github.workspace }}/csharp/

    - name: List Files
      run: ls ${{ github.workspace }} -hR

    - name: Pack NuGet
      run: dotnet pack ${{ github.workspace }}/csharp/RocksDbSharp.csproj --no-build -c Release

    - name: List Files Again
      run: ls ${{ github.workspace }} -hR

    - name: Push NuGet Package
      run: dotnet nuget push **/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} 
